from typing import List
from src.args import Arguments
from src.compute import noIQ, computeIQ


def test_compute_noIQ() -> None:
    expected: List[float] = [
        5.940600124901456e-12,
        9.244533294435414e-12,
        1.4322191097066944e-11,
        2.2090408123163672e-11,
        3.3920935210967046e-11,
        5.1856320453797776e-11,
        7.892332614652059e-11,
        1.195855938642724e-10,
        1.8039402617171946e-10,
        2.709163656468661e-10,
        4.0505885665488577e-10,
        6.029354599455295e-10,
        8.934974607957055e-10,
        1.318213093749645e-09,
        1.936188881945825e-09,
        2.831259164303258e-09,
        4.121747000110564e-09,
        5.9738297073246485e-09,
        8.619739643225456e-09,
        1.2382412297035287e-08,
        1.7708679390146086e-08,
        2.5213718057154874e-08,
        3.574023563131749e-08,
        5.043682419517881e-08,
        7.086109462869615e-08,
        9.911463431561985e-08,
        1.3801856619470807e-07,
        1.9134056065902968e-07,
        2.64086606068805e-07,
        3.628737147253392e-07,
        4.964030580420002e-07,
        6.760568043657828e-07,
        9.166461748962232e-07,
        1.237342912614521e-06,
        1.6628314193369052e-06,
        2.224724159709224e-06,
        2.9632884112517205e-06,
        3.92953785043599e-06,
        5.1877475320245135e-06,
        6.818455192052316e-06,
        8.922015050992357e-06,
        1.1622771894357553e-05,
        1.5073922560245647e-05,
        1.9463128386097353e-05,
        2.501893491450869e-05,
        3.201804344138802e-05,
        4.079346200758479e-05,
        5.174354041392726e-05,
        6.534186408502486e-05,
        8.214794456486792e-05,
        0.00010281859975274045,
        0.00012811986462346725,
        0.0001589392134309895,
        0.00019629780802555728,
        0.000241362415201286,
        0.00029545656079586714,
        0.000360070412079625,
        0.0004368688059342348,
        0.0005276967721986643,
        0.0006345818436891459,
        0.0007597324015864962,
        0.0009055312822457079,
        0.001074523874243266,
        0.001269399967710018,
        0.00149296868632286,
        0.001748125939580633,
        0.0020378139818590314,
        0.0023649728564154294,
        0.002732483736348146,
        0.003143104447724773,
        0.003599397767545871,
        0.004103653423289819,
        0.004657805071394345,
        0.005263343886726277,
        0.005921230739372792,
        0.0066318092528499135,
        0.007394722311963704,
        0.008208834801723306,
        0.00907216549415187,
        0.009981831042382991,
        0.010934004978399576,
        0.01192389443296937,
        0.012945736998880865,
        0.013992819741648281,
        0.015057521831141632,
        0.01613138163460956,
        0.01720518839354918,
        0.018269097826468565,
        0.01931277018409885,
        0.020325528464034476,
        0.02129653370149015,
        0.022214973526119976,
        0.023070259545128195,
        0.023852228611197932,
        0.02455134268688822,
        0.025158881846199545,
        0.025667124973067598,
        0.02606951293169706,
        0.026360789392387847,
        0.026537115087596815,
        0.02659615202676218,
        0.026537115087596815,
        0.026360789392387847,
        0.02606951293169706,
        0.025667124973067598,
        0.025158881846199545,
        0.02455134268688822,
        0.023852228611197932,
        0.023070259545128195,
        0.022214973526119976,
        0.02129653370149015,
        0.020325528464034476,
        0.01931277018409885,
        0.018269097826468565,
        0.01720518839354918,
        0.01613138163460956,
        0.015057521831141632,
        0.013992819741648281,
        0.012945736998880865,
        0.01192389443296937,
        0.010934004978399576,
        0.009981831042382991,
        0.00907216549415187,
        0.008208834801723306,
        0.007394722311963704,
        0.0066318092528499135,
        0.005921230739372792,
        0.005263343886726277,
        0.004657805071394345,
        0.004103653423289819,
        0.003599397767545871,
        0.003143104447724773,
        0.002732483736348146,
        0.0023649728564154294,
        0.0020378139818590314,
        0.001748125939580633,
        0.00149296868632286,
        0.001269399967710018,
        0.001074523874243266,
        0.0009055312822457079,
        0.0007597324015864962,
        0.0006345818436891459,
        0.0005276967721986643,
        0.0004368688059342348,
        0.000360070412079625,
        0.00029545656079586714,
        0.000241362415201286,
        0.00019629780802555728,
        0.0001589392134309895,
        0.00012811986462346725,
        0.00010281859975274045,
        8.214794456486792e-05,
        6.534186408502486e-05,
        5.174354041392726e-05,
        4.079346200758479e-05,
        3.201804344138802e-05,
        2.501893491450869e-05,
        1.9463128386097353e-05,
        1.5073922560245647e-05,
        1.1622771894357553e-05,
        8.922015050992357e-06,
        6.818455192052316e-06,
        5.1877475320245135e-06,
        3.92953785043599e-06,
        2.9632884112517205e-06,
        2.224724159709224e-06,
        1.6628314193369052e-06,
        1.237342912614521e-06,
        9.166461748962232e-07,
        6.760568043657828e-07,
        4.964030580420002e-07,
        3.628737147253392e-07,
        2.64086606068805e-07,
        1.9134056065902968e-07,
        1.3801856619470807e-07,
        9.911463431561985e-08,
        7.086109462869615e-08,
        5.043682419517881e-08,
        3.574023563131749e-08,
        2.5213718057154874e-08,
        1.7708679390146086e-08,
        1.2382412297035287e-08,
        8.619739643225456e-09,
        5.9738297073246485e-09,
        4.121747000110564e-09,
        2.831259164303258e-09,
        1.936188881945825e-09,
        1.318213093749645e-09,
        8.934974607957055e-10,
        6.029354599455295e-10,
        4.0505885665488577e-10,
        2.709163656468661e-10,
        1.8039402617171946e-10,
        1.195855938642724e-10,
        7.892332614652059e-11,
        5.1856320453797776e-11,
        3.3920935210967046e-11,
        2.2090408123163672e-11,
        1.4322191097066944e-11,
        9.244533294435414e-12,
        5.940600124901456e-12,
    ]
    current: List[float] = noIQ(Arguments(100, 15, None, None))

    assert expected == current


def test_compute_iq_example1() -> None:
    expected: float = 33.8
    current: float = computeIQ(0, 90, Arguments(100, 24, 90, None))

    assert round(current, 1) == expected


def test_compute_iq_example2() -> None:
    expected: float = 7.9
    current: float = computeIQ(90, 95, Arguments(100, 24, 90, 95))

    assert round(current, 1) == expected
