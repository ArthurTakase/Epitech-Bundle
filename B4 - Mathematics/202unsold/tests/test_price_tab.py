from typing import Any, List
from src.args import Laws
from src.display import display_probability, display_y_sum
from src.price_tab import (
    compute_probability,
    compute_y_sum,
    generate_tab,
    f,
)


def test_f_function() -> None:
    assert f(10, 10, 60, 70) == 0.1
    assert f(50, 40, 60, 70) == 0.01
    assert f(30, 50, 60, 70) == 0.02
    assert f(40, 10, 60, 70) == 0.04
    assert f(40, 40, 60, 70) == 0.02


def test_display_y_sum(capsys: Any) -> None:
    tab: List[List[float]] = [
        [0.1, 0.08, 0.06, 0.04, 0.02],
        [
            0.08333333333333333,
            0.06666666666666667,
            0.05,
            0.03333333333333333,
            0.016666666666666666,
        ],
        [
            0.06666666666666667,
            0.05333333333333334,
            0.04,
            0.02666666666666667,
            0.013333333333333334,
        ],
        [0.05, 0.04, 0.03, 0.02, 0.01],
        [
            0.03333333333333333,
            0.02666666666666667,
            0.02,
            0.013333333333333334,
            0.006666666666666667,
        ],
    ]
    y_law: List[float] = compute_y_sum(tab)
    display_y_sum(y_law)
    assert (
        capsys.readouterr().out == "X law\t0.333\t0.267\t0.200\t0.133\t0.067\t1.000\n"
    )


def test_display_probability(capsys: Any) -> None:
    tab: List[List[float]] = [
        [0.1, 0.08, 0.06, 0.04, 0.02],
        [
            0.08333333333333333,
            0.06666666666666667,
            0.05,
            0.03333333333333333,
            0.016666666666666666,
        ],
        [
            0.06666666666666667,
            0.05333333333333334,
            0.04,
            0.02666666666666667,
            0.013333333333333334,
        ],
        [0.05, 0.04, 0.03, 0.02, 0.01],
        [
            0.03333333333333333,
            0.02666666666666667,
            0.02,
            0.013333333333333334,
            0.006666666666666667,
        ],
    ]
    laws: Laws = compute_probability(tab)
    display_probability(tab, laws)
    assert (
        capsys.readouterr().out
        == "\tX=10\tX=20\tX=30\tX=40\tX=50\tY law\nY=10\t0.100\t0.080\t0.060\t0.040\t0.020\t0.300\nY=20\t0.083\t0.067\t0.050\t0.033\t0.017\t0.250\nY=30\t0.067\t0.053\t0.040\t0.027\t0.013\t0.200\nY=40\t0.050\t0.040\t0.030\t0.020\t0.010\t0.150\nY=50\t0.033\t0.027\t0.020\t0.013\t0.007\t0.100\nX law\t0.333\t0.267\t0.200\t0.133\t0.067\t1.000\n"
    )


def test_generate_tab() -> None:
    assert generate_tab(60, 70) == [
        [0.1, 0.08, 0.06, 0.04, 0.02],
        [
            0.08333333333333333,
            0.06666666666666667,
            0.05,
            0.03333333333333333,
            0.016666666666666666,
        ],
        [
            0.06666666666666667,
            0.05333333333333334,
            0.04,
            0.02666666666666667,
            0.013333333333333334,
        ],
        [0.05, 0.04, 0.03, 0.02, 0.01],
        [
            0.03333333333333333,
            0.02666666666666667,
            0.02,
            0.013333333333333334,
            0.006666666666666667,
        ],
    ]
