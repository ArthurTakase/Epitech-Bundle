from src.laws import calculate
from src.display import display_laws
from typing import Any


def test_calculate_law() -> None:
    res: float = calculate(
        [
            [0.1, 0.08, 0.06, 0.04, 0.02],
            [
                0.08333333333333333,
                0.06666666666666667,
                0.05,
                0.03333333333333333,
                0.016666666666666666,
            ],
            [
                0.06666666666666667,
                0.05333333333333334,
                0.04,
                0.02666666666666667,
                0.013333333333333334,
            ],
            [0.05, 0.04, 0.03, 0.02, 0.01],
            [
                0.03333333333333333,
                0.02666666666666667,
                0.02,
                0.013333333333333334,
                0.006666666666666667,
            ],
        ],
        20,
    )
    assert res == 0.100


def test_display_law(capsys: Any) -> None:
    display_laws(
        [
            [0.1, 0.08, 0.06, 0.04, 0.02],
            [
                0.08333333333333333,
                0.06666666666666667,
                0.05,
                0.03333333333333333,
                0.016666666666666666,
            ],
            [
                0.06666666666666667,
                0.05333333333333334,
                0.04,
                0.02666666666666667,
                0.013333333333333334,
            ],
            [0.05, 0.04, 0.03, 0.02, 0.01],
            [
                0.03333333333333333,
                0.02666666666666667,
                0.02,
                0.013333333333333334,
                0.006666666666666667,
            ],
        ]
    )
    assert (
        capsys.readouterr().out
        == "z\t20\t30\t40\t50\t60\t70\t80\t90\t100\np(Z=z)\t0.100\t0.163\t0.193\t0.193\t0.167\t0.100\t0.053\t0.023\t0.007\n"
    )
